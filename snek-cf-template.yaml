---
AWSTemplateFormatVersion: '2010-09-09'
Description: Snek deploy CF script
Parameters:
  ParamApiGatewayStageName:
    Type: String
    Default: dev
#Mappings:
## None

Resources:
  LambdaZipsBucket:
    Type: AWS::S3::Bucket

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  LambdaFunction:
    # DependsOn: CopyZips
    Type: AWS::Lambda::Function
    Properties:
      Description: Snek Lambda function
      Handler: handler.lambda_handler
      Runtime: python3.8
      Role: !GetAtt 'LambdaExecutionRole.Arn'
      Timeout: 300
      MemorySize: 128
      Code:
        S3Bucket: !Ref 'LambdaZipsBucket'
        S3Key: 'snek-dev-1600047077.zip'

  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: my-api
      Description: My API

  ApiGatewayRootMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        # Credentials: !Ref 'LambdaExecutionRole'
        Type: AWS_PROXY
        Uri: !Sub
          - 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations'
          - LambdaArn: !GetAtt 'LambdaFunction.Arn'
      ResourceId: !GetAtt "ApiGateway.RootResourceId"
      RestApiId: !Ref "ApiGateway"

  ApiGatewayDeployment:
    Type: "AWS::ApiGateway::Deployment"
    DependsOn:
      - "ApiGatewayRootMethod"
    Properties:
      RestApiId: !Ref "ApiGateway"
      StageName: !Ref "ParamApiGatewayStageName"

Outputs:
  apiGatewayInvokeURL:
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${ParamApiGatewayStageName}"
  lambdaArn:
    Value: !GetAtt "LambdaFunction.Arn"
